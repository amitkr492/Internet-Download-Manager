/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HttpDownloadUtility;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import Database.*;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author amit
 */
public class ShowDownloadInfo extends JFrame implements Runnable {

    
    int contentLength;
    String type;
   String filelength;
    String fileURL,saveDir;
    String fileName; 
    boolean isresumeable;
    DBconnect dbconnection;
     JTable fileTable;
     int idd=0,idx,flag;
    public ShowDownloadInfo(int contentLength,String fileName,String fileURL,String saveDir,boolean isresumeable, JTable fileTable,int flag) throws SQLException
    {
       this.fileTable=fileTable;
        this.contentLength=contentLength;
        this.fileName=fileName;
        this.flag=flag;
        this.fileURL=fileURL;
        this.saveDir=saveDir;
        this.isresumeable=isresumeable;
       dbconnection=new DBconnect();
       type=new getCategory(fileName).getfiletype();
      
    }
   
    
    /**
     * Creates new form ShowDownloadInfo
     */
    public ShowDownloadInfo() {
        initComponents();
        this.setVisible(true);
        
    }
  void checkexistenceofdefaultfolder() throws IOException
        {
            
            if(!Files.exists(Paths.get(saveDir)))
            {
                Files.createDirectory(Paths.get(saveDir));
            }
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Download Info");
        setBounds(new java.awt.Rectangle(450, 200, 542, 217));
        setResizable(false);

        jLabel1.setText(" URL");

        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Category");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Documents", "Compressed", "Music", "Programs", "Video", "General" }));
        jComboBox1.setSelectedIndex(5);

        jLabel3.setText(" Save As");

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Dpwnload Later");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Download Now");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Cancel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel4.setText("1 MB");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
          File selectedFile = fileChooser.getSelectedFile();
        
        
        jComboBox2.addItem(selectedFile);
        jComboBox2.setSelectedItem(selectedFile);
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    public String currentstamp()
    {
        java.util.Date dt=new java.util.Date();
       SimpleDateFormat ft = new SimpleDateFormat ("yyyy-MM-dd hh:mm:ss");
        return ft.format(dt).toString();
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        System.out.println("Transferring to chunkdivider\n");
        
       
        
        type=jComboBox1.getSelectedItem().toString();
        
        System.out.println("type ==="+type);
            saveDir=jComboBox2.getSelectedItem().toString();
            String tdir="";
            //Appending one slash with extra one
            for(int i=0;i<saveDir.length();i++)
            {
                if(saveDir.charAt(i)=='\\')
                    tdir+="\\";
                
                tdir+=saveDir.charAt(i);
            }
            System.out.println("avEdir"+saveDir);
            saveDir+=File.separator+type;
           idx=0;
       String path=tdir;            //temporary tdir containg one extra slash
        System.out.println(path);
        try {
           idx=fileTable.getSelectedRow();
            System.out.println("row selected="+idx);
            if(idx<0)
            {
            int st=dbconnection.st.executeUpdate("INSERT INTO filedetails set filename=\""+fileName+"\",file_status=\"Queues\","
                    + "size=\""+filelength+"\",fileid=(select id from category where type=\""+type+"\"),url=\""+fileURL+
                    "\",path=\""+path+"\"");
            dbconnection.rs=dbconnection.st.executeQuery("Select id from filedetails order by id desc");
            if(dbconnection.rs.next())
            {
                idd=dbconnection.rs.getInt("id");
            }
            
            }
            else
            {
                int id=(int) fileTable.getValueAt(idx, 0);
                int st=dbconnection.st.executeUpdate("update filedetails set file_status=\"Queues\" where id="+id);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ShowDownloadInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
            if(idx<0)
            {
        
        Object[] row={idd+1,fileName,filelength,type,"Running",currentstamp()};
        DefaultTableModel model =(DefaultTableModel)fileTable.getModel();
        model.addRow(row);
            }
            else
            {
               // System.out.println("editing\n\n\n");
                fileTable.setValueAt("Running", idx, 4);
                fileTable.setValueAt(currentstamp(), idx, 5);
                
            }
        
       
        try {
            //fileTable.setCellSelectionEnabled(false);
            checkexistenceofdefaultfolder();    //Check the existence of the folder provided by the user with filechooser
        } catch (IOException ex) {
            Logger.getLogger(ShowDownloadInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
       // System.out.println("saveDir="+saveDir); 
       Thread t;
        try {
            t = new ChunkDivider(contentLength,fileName,fileURL,saveDir,null,isresumeable,fileTable,idd);
            t.start();
        } catch (SQLException ex) {
            Logger.getLogger(ShowDownloadInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
        
        
        this.dispose();
       
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
       // System.out.print("click\n");
       
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Enteryt the details in database for downloading later
        
         type=jComboBox1.getSelectedItem().toString();
        
             
             
            
            String tdir="";
            for(int i=0;i<saveDir.length();i++)
            {
                if(saveDir.charAt(i)=='\\')
                    tdir+="\\";
                
                tdir+=saveDir.charAt(i);
            }
            
       
         idx=0;
       String path=tdir;
       
        
              
            saveDir=jComboBox2.getSelectedItem().toString();
       saveDir+=File.separator+type;
        System.out.println(path);
        try {
           idx=fileTable.getSelectedRow();
            System.out.println("row selected="+idx);
            if(idx<0)
            {
            int st=dbconnection.st.executeUpdate("INSERT INTO filedetails set filename=\""+fileName+"\",file_status=\"Queues\","
                    + "size=\""+filelength+"\",fileid=(select id from category where type=\""+type+"\"),url=\""+fileURL+
                    "\",path=\""+path+"\"");
            }
            else
            {
                int id=(int) fileTable.getValueAt(idx, 0);
                System.out.println("update\n\n");
                int st=dbconnection.st.executeUpdate("update filedetails set file_status=\"Queues\" where id="+id);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ShowDownloadInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
            if(idx<0)
            {
        int lastRow=fileTable.getRowCount();
        if(lastRow>0)
            lastRow--;
        idd=0;
        if(lastRow>0)
        idd=(int) fileTable.getValueAt(lastRow,0);
        Object[] row={idd+1,fileName,filelength,type,"Running",currentstamp()};
        DefaultTableModel model =(DefaultTableModel)fileTable.getModel();
        model.addRow(row);
            }
            else
            {
                System.out.println("editing\n\n\n");
                fileTable.setValueAt("Queues", idx, 4);
                fileTable.setValueAt(currentstamp(), idx, 5);
                
            }
        
       
       
        
        
        this.dispose();
        
    // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed

       
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
   
    private javax.swing.JFileChooser jFileChooser1;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        initComponents();
         jTextField1.setText(fileURL);
         
       jTextField1.setEditable(false);
       double temp=(double)contentLength;
       int state=1;
       double prev=(double)contentLength;
       while(temp>=1024)
       {
           prev=temp;
           temp/=1024;
           state++;
       }
       prev=temp;
      
 DecimalFormat df = new DecimalFormat("#.00");
       
    if(state==1)
        filelength=df.format(prev)+" B";
       else if(state==2)
             filelength=df.format(prev)+" KB";
       else if(state==3)
             filelength=df.format(prev)+" MB";
       else if(state==4)
             filelength=df.format(prev)+" GB";
    jLabel4.setText(filelength);
     
       jComboBox1.setSelectedItem(type);
                jComboBox2.addItem(saveDir);
                 jComboBox2.setSelectedIndex(0);
     //   System.out.println(jComboBox2.getSelectedItem());
                    if(flag==1)
                           jButton3.doClick();
                    else
                    this.setVisible(true);

//throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
